{\rtf1\ansi\ansicpg949\cocoartf2707
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 function solution(queue1, queue2) \{\
    let totalArr = [...queue1, ...queue2]\
    let maxCount = totalArr.length * 2\
    let start = 0\
    let end = queue1.length\
    \
    const sum = (arr) => arr.reduce((a,b) => a + b)\
    let totalNum = sum(totalArr.slice(start, end))\
    let goalNum = sum(totalArr) / 2\
    let count = 0;\
    \
    while(count <= maxCount)\{\
        if(totalNum < goalNum)\{\
            totalNum += totalArr[end]\
            end++\
        \} else if(totalNum > goalNum)\{\
            totalNum -= totalArr[start]\
            start++\
        \} else if(totalNum === goalNum)\{\
            return count\
        \}\
        count++\
    \}\
    return -1;\
\}}